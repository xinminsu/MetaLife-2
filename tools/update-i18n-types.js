#!/usr/bin/env node

// SPDX-FileCopyrightText: 2021 The Manyverse Authors
//
// SPDX-License-Identifier: CC0-1.0

const fs = require('fs');
const path = require('path');
const enJSON = require('../translations/en.json');

const thisYear = new Date().getFullYear();
const render = keys => `
// SPDX-FileCopyrightText: ${thisYear} The Manyverse Authors
//
// SPDX-License-Identifier: MPL-2.0

// Please DO NOT edit this file directly. See tools/update-i18n-types.js
declare module 'i18n-js' {
  type Key =
${keys.map(key => `    | '${key}'`).join('\n')};
  function t(key: Key, config?: any): string;
  let fallbacks: boolean;
  let locale: string;
  let defaultLocale: string;
  let translations: Record<string, any>;
}
`;

const keys = [];

function traverse(obj, ancestors, isFirst) {
  for (let name in obj) {
    if (typeof obj[name] === 'object') {
      traverse(obj[name], ancestors.concat(name));
    } else {
      const isCountable = name === 'one' || name === 'other';
      const key = isCountable
        ? ancestors.join('.')
        : ancestors.concat(name).join('.');
      if (!isCountable || !keys[keys.length - 1].includes(key)) {
        keys.push(key);
      }
    }
  }
  if (isFirst) {
    const output = render(keys).trimLeft();
    const filename = path.resolve(__dirname, '../typings/i18n-js.d.ts');
    fs.writeFileSync(filename, output, 'utf8');
  }
}

traverse(enJSON, [], true);
